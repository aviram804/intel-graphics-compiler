# ===---
# Main igc building script
# ===---

name: Build igc from system
inputs:
  ref_igc:
    description: 'IGC ref to build with'
    required: true
  ref_translator:
    description: 'SPIRV-LLVM-Translator ref to build with'
    required: true

  ref_vc-intrinsics:
    description: 'vc-intrinsics ref to build with'
    required: true
  ref_spirv-tools:
    description: 'spirv-Tools ref to build with'
    required: true
  ref_spirv-headers:
    description: 'spirv-headers ref to build with'
    required: true
  build_type:
    description: 'Build type to pass to CMake'
    required: false
    default: Release
  LLVM_PREFERRED_VERSION:
    description: 'Which LLVM version is needed to build IGC format XX.X.X'
    required: false
    default: 11.1.0

runs:
  using: 'composite'
  steps:



    - name: Checkout SPIRV-LLVM-Translator
      uses: actions/checkout@v3
      with:
        repository: KhronosGroup/SPIRV-LLVM-Translator
        path: llvm-project/llvm/projects/llvm-spirv
        ref: ${{ inputs.ref_translator }}
        
    - name: Checkout opencl-clang
      uses: actions/checkout@v3
      with:
        repository: intel/opencl-clang
        path: llvm-project/llvm/projects/opencl-clang
        ref: ${{ inputs.ref_opencl-clang }}

    - name: Checkout vc-intrinsics
      uses: actions/checkout@v3
      with:
        repository: intel/vc-intrinsics
        path: vc-intrinsics
        ref: ${{ inputs.ref_vc-intrinsics }}
    
    - name: Checkout spirv-tools
      uses: actions/checkout@v3
      with:
        repository: KhronosGroup/SPIRV-Tools
        path: SPIRV-Tools
        ref: ${{ inputs.ref_spirv-tools }}

    - name: Checkout spirv-headers
      uses: actions/checkout@v3
      with:
        repository: KhronosGroup/SPIRV-Headers
        path: SPIRV-Headers
        ref: ${{ inputs.ref_spirv-headers }}

    - name: Checkout IGC
      uses: actions/checkout@v3
      with:
        path: igc
        ref: ${{ inputs.ref_igc }}

    - name: Get depences
      shell: bash
      run: |
        sudo apt-get install -y git build-essential cmake flex bison software-properties-common file

    - name: Configure
      shell: bash
      run: |
        mkdir build && cd build
        cmake                                                                           \
          -Wno-dev                                                                      \
          -DCMAKE_BUILD_TYPE=${{ inputs.build_type }}                                   \
          -DIGC_OPTION__LLVM_PREFERRED_VERSION=${{ inputs.LLVM_PREFERRED_VERSION }}     \
          -DCCLANG_BUILD_INTREE_LLVM=True                                               \
          -DLLVM_ENABLE_PROJECTS="clang"                                                \
          ../igc
          

    - name: Build
      shell: bash
      run: |
        cd build
        echo [mnaczk] proc number `nproc`
        make -j2

    - name: Package
      shell: bash
      run: |
        cd build
        make package

    - name: Publish artifacts
      uses: actions/upload-artifact@v3
      with:
        name: IGC_Ubuntu_${{ inputs.LLVM_PREFERRED_VERSION }}_${{ inputs.ref_igc }}
        path: ./build/*.deb
        retention-days: 7